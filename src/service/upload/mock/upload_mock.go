// Automatically generated by MockGen. DO NOT EDIT!
// Source: api/src/service/upload (interfaces: AthUploadService)

package mock

import (
	models "api/src/models"
	context "context"
	gomock "github.com/golang/mock/gomock"
)

// Mock of AthUploadService interface
type MockAthUploadService struct {
	ctrl     *gomock.Controller
	recorder *_MockAthUploadServiceRecorder
}

// Recorder for MockAthUploadService (not exported)
type _MockAthUploadServiceRecorder struct {
	mock *MockAthUploadService
}

func NewMockAthUploadService(ctrl *gomock.Controller) *MockAthUploadService {
	mock := &MockAthUploadService{ctrl: ctrl}
	mock.recorder = &_MockAthUploadServiceRecorder{mock}
	return mock
}

func (_m *MockAthUploadService) EXPECT() *_MockAthUploadServiceRecorder {
	return _m.recorder
}

func (_m *MockAthUploadService) UploadToS3(_param0 context.Context, _param1 map[string]interface{}) models.Response {
	ret := _m.ctrl.Call(_m, "UploadToS3", _param0, _param1)
	ret0, _ := ret[0].(models.Response)
	return ret0
}

func (_mr *_MockAthUploadServiceRecorder) UploadToS3(arg0, arg1 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "UploadToS3", arg0, arg1)
}

func (_m *MockAthUploadService) ValidateMerchantDocs(_param0 context.Context, _param1 models.MerchantKYC) models.Response {
	ret := _m.ctrl.Call(_m, "ValidateMerchantDocs", _param0, _param1)
	ret0, _ := ret[0].(models.Response)
	return ret0
}

func (_mr *_MockAthUploadServiceRecorder) ValidateMerchantDocs(arg0, arg1 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "ValidateMerchantDocs", arg0, arg1)
}

func (_m *MockAthUploadService) ValidateVenueImages(_param0 context.Context, _param1 models.VenueImagesReq) models.Response {
	ret := _m.ctrl.Call(_m, "ValidateVenueImages", _param0, _param1)
	ret0, _ := ret[0].(models.Response)
	return ret0
}

func (_mr *_MockAthUploadServiceRecorder) ValidateVenueImages(arg0, arg1 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "ValidateVenueImages", arg0, arg1)
}

func (_m *MockAthUploadService) VenueUploadToS3(_param0 context.Context, _param1 map[string]interface{}) models.Response {
	ret := _m.ctrl.Call(_m, "VenueUploadToS3", _param0, _param1)
	ret0, _ := ret[0].(models.Response)
	return ret0
}

func (_mr *_MockAthUploadServiceRecorder) VenueUploadToS3(arg0, arg1 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "VenueUploadToS3", arg0, arg1)
}
