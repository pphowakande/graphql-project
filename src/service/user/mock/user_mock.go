// Automatically generated by MockGen. DO NOT EDIT!
// Source: api/src/service/user (interfaces: AthUserService)

package mock

import (
	models "api/src/models"
	context "context"
	gomock "github.com/golang/mock/gomock"
	gorm "github.com/jinzhu/gorm"
)

// Mock of AthUserService interface
type MockAthUserService struct {
	ctrl     *gomock.Controller
	recorder *_MockAthUserServiceRecorder
}

// Recorder for MockAthUserService (not exported)
type _MockAthUserServiceRecorder struct {
	mock *MockAthUserService
}

func NewMockAthUserService(ctrl *gomock.Controller) *MockAthUserService {
	mock := &MockAthUserService{ctrl: ctrl}
	mock.recorder = &_MockAthUserServiceRecorder{mock}
	return mock
}

func (_m *MockAthUserService) EXPECT() *_MockAthUserServiceRecorder {
	return _m.recorder
}

func (_m *MockAthUserService) CreateUser(_param0 context.Context, _param1 *gorm.DB, _param2 models.AthUser, _param3 string) models.Response {
	ret := _m.ctrl.Call(_m, "CreateUser", _param0, _param1, _param2, _param3)
	ret0, _ := ret[0].(models.Response)
	return ret0
}

func (_mr *_MockAthUserServiceRecorder) CreateUser(arg0, arg1, arg2, arg3 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "CreateUser", arg0, arg1, arg2, arg3)
}

func (_m *MockAthUserService) EditUser(_param0 context.Context, _param1 *gorm.DB, _param2 models.AthUser, _param3 string) models.Response {
	ret := _m.ctrl.Call(_m, "EditUser", _param0, _param1, _param2, _param3)
	ret0, _ := ret[0].(models.Response)
	return ret0
}

func (_mr *_MockAthUserServiceRecorder) EditUser(arg0, arg1, arg2, arg3 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "EditUser", arg0, arg1, arg2, arg3)
}

func (_m *MockAthUserService) GetAccountDetailsByID(_param0 context.Context, _param1 *gorm.DB, _param2 int) models.Response {
	ret := _m.ctrl.Call(_m, "GetAccountDetailsByID", _param0, _param1, _param2)
	ret0, _ := ret[0].(models.Response)
	return ret0
}

func (_mr *_MockAthUserServiceRecorder) GetAccountDetailsByID(arg0, arg1, arg2 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "GetAccountDetailsByID", arg0, arg1, arg2)
}

func (_m *MockAthUserService) GetUserByID(_param0 context.Context, _param1 *gorm.DB, _param2 int, _param3 bool) models.Response {
	ret := _m.ctrl.Call(_m, "GetUserByID", _param0, _param1, _param2, _param3)
	ret0, _ := ret[0].(models.Response)
	return ret0
}

func (_mr *_MockAthUserServiceRecorder) GetUserByID(arg0, arg1, arg2, arg3 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "GetUserByID", arg0, arg1, arg2, arg3)
}

func (_m *MockAthUserService) LoginUser(_param0 context.Context, _param1 *gorm.DB, _param2 models.LoginRequest) models.Response {
	ret := _m.ctrl.Call(_m, "LoginUser", _param0, _param1, _param2)
	ret0, _ := ret[0].(models.Response)
	return ret0
}

func (_mr *_MockAthUserServiceRecorder) LoginUser(arg0, arg1, arg2 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "LoginUser", arg0, arg1, arg2)
}

func (_m *MockAthUserService) ResetPasswordUser(_param0 context.Context, _param1 *gorm.DB, _param2 models.ResetPasswordRequest) models.Response {
	ret := _m.ctrl.Call(_m, "ResetPasswordUser", _param0, _param1, _param2)
	ret0, _ := ret[0].(models.Response)
	return ret0
}

func (_mr *_MockAthUserServiceRecorder) ResetPasswordUser(arg0, arg1, arg2 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "ResetPasswordUser", arg0, arg1, arg2)
}
