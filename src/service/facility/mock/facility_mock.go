// Automatically generated by MockGen. DO NOT EDIT!
// Source: api/src/service/facility (interfaces: AthFacilityService)

package mock

import (
	models "api/src/models"
	context "context"
	gomock "github.com/golang/mock/gomock"
	gorm "github.com/jinzhu/gorm"
	v1 "stash.bms.bz/turf/generic-proto-files.git/facility/v1"
)

// Mock of AthFacilityService interface
type MockAthFacilityService struct {
	ctrl     *gomock.Controller
	recorder *_MockAthFacilityServiceRecorder
}

// Recorder for MockAthFacilityService (not exported)
type _MockAthFacilityServiceRecorder struct {
	mock *MockAthFacilityService
}

func NewMockAthFacilityService(ctrl *gomock.Controller) *MockAthFacilityService {
	mock := &MockAthFacilityService{ctrl: ctrl}
	mock.recorder = &_MockAthFacilityServiceRecorder{mock}
	return mock
}

func (_m *MockAthFacilityService) EXPECT() *_MockAthFacilityServiceRecorder {
	return _m.recorder
}

func (_m *MockAthFacilityService) AddFacilityCustomRates(_param0 context.Context, _param1 *gorm.DB, _param2 models.AthFacilityCustomRates) models.Response {
	ret := _m.ctrl.Call(_m, "AddFacilityCustomRates", _param0, _param1, _param2)
	ret0, _ := ret[0].(models.Response)
	return ret0
}

func (_mr *_MockAthFacilityServiceRecorder) AddFacilityCustomRates(arg0, arg1, arg2 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "AddFacilityCustomRates", arg0, arg1, arg2)
}

func (_m *MockAthFacilityService) CreateFacility(_param0 context.Context, _param1 *gorm.DB, _param2 models.AthFacilities) models.Response {
	ret := _m.ctrl.Call(_m, "CreateFacility", _param0, _param1, _param2)
	ret0, _ := ret[0].(models.Response)
	return ret0
}

func (_mr *_MockAthFacilityServiceRecorder) CreateFacility(arg0, arg1, arg2 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "CreateFacility", arg0, arg1, arg2)
}

func (_m *MockAthFacilityService) CreateFacilitySlots(_param0 context.Context, _param1 *gorm.DB, _param2 models.AthFacilitySlots) models.Response {
	ret := _m.ctrl.Call(_m, "CreateFacilitySlots", _param0, _param1, _param2)
	ret0, _ := ret[0].(models.Response)
	return ret0
}

func (_mr *_MockAthFacilityServiceRecorder) CreateFacilitySlots(arg0, arg1, arg2 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "CreateFacilitySlots", arg0, arg1, arg2)
}

func (_m *MockAthFacilityService) CreateFacilitySportCategory(_param0 context.Context, _param1 *gorm.DB, _param2 models.AthFacilitySportsData) models.Response {
	ret := _m.ctrl.Call(_m, "CreateFacilitySportCategory", _param0, _param1, _param2)
	ret0, _ := ret[0].(models.Response)
	return ret0
}

func (_mr *_MockAthFacilityServiceRecorder) CreateFacilitySportCategory(arg0, arg1, arg2 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "CreateFacilitySportCategory", arg0, arg1, arg2)
}

func (_m *MockAthFacilityService) DeleteFacilityByID(_param0 context.Context, _param1 *gorm.DB, _param2 *gorm.DB, _param3 models.DeleteFacilityByID) models.Response {
	ret := _m.ctrl.Call(_m, "DeleteFacilityByID", _param0, _param1, _param2, _param3)
	ret0, _ := ret[0].(models.Response)
	return ret0
}

func (_mr *_MockAthFacilityServiceRecorder) DeleteFacilityByID(arg0, arg1, arg2, arg3 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "DeleteFacilityByID", arg0, arg1, arg2, arg3)
}

func (_m *MockAthFacilityService) EditFacility(_param0 context.Context, _param1 *gorm.DB, _param2 models.AthFacilities) models.Response {
	ret := _m.ctrl.Call(_m, "EditFacility", _param0, _param1, _param2)
	ret0, _ := ret[0].(models.Response)
	return ret0
}

func (_mr *_MockAthFacilityServiceRecorder) EditFacility(arg0, arg1, arg2 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "EditFacility", arg0, arg1, arg2)
}

func (_m *MockAthFacilityService) GetAllSportCategories(_param0 context.Context, _param1 *gorm.DB, _param2 v1.GetAllSportCategoriesReq) models.Response {
	ret := _m.ctrl.Call(_m, "GetAllSportCategories", _param0, _param1, _param2)
	ret0, _ := ret[0].(models.Response)
	return ret0
}

func (_mr *_MockAthFacilityServiceRecorder) GetAllSportCategories(arg0, arg1, arg2 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "GetAllSportCategories", arg0, arg1, arg2)
}

func (_m *MockAthFacilityService) GetCustomRatesForFacilityByID(_param0 context.Context, _param1 *gorm.DB, _param2 models.CustomRatesForFacilityByID) models.Response {
	ret := _m.ctrl.Call(_m, "GetCustomRatesForFacilityByID", _param0, _param1, _param2)
	ret0, _ := ret[0].(models.Response)
	return ret0
}

func (_mr *_MockAthFacilityServiceRecorder) GetCustomRatesForFacilityByID(arg0, arg1, arg2 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "GetCustomRatesForFacilityByID", arg0, arg1, arg2)
}

func (_m *MockAthFacilityService) GetFacilityByID(_param0 context.Context, _param1 *gorm.DB, _param2 v1.GetFacilityByIDReq) models.Response {
	ret := _m.ctrl.Call(_m, "GetFacilityByID", _param0, _param1, _param2)
	ret0, _ := ret[0].(models.Response)
	return ret0
}

func (_mr *_MockAthFacilityServiceRecorder) GetFacilityByID(arg0, arg1, arg2 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "GetFacilityByID", arg0, arg1, arg2)
}

func (_m *MockAthFacilityService) GetFacilityForVenueID(_param0 context.Context, _param1 *gorm.DB, _param2 v1.GetFacilityForVenueIDReq) models.Response {
	ret := _m.ctrl.Call(_m, "GetFacilityForVenueID", _param0, _param1, _param2)
	ret0, _ := ret[0].(models.Response)
	return ret0
}

func (_mr *_MockAthFacilityServiceRecorder) GetFacilityForVenueID(arg0, arg1, arg2 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "GetFacilityForVenueID", arg0, arg1, arg2)
}

func (_m *MockAthFacilityService) GetFacilitySlotsByID(_param0 context.Context, _param1 *gorm.DB, _param2 v1.GetFacilitySlotsByIDReq) models.Response {
	ret := _m.ctrl.Call(_m, "GetFacilitySlotsByID", _param0, _param1, _param2)
	ret0, _ := ret[0].(models.Response)
	return ret0
}

func (_mr *_MockAthFacilityServiceRecorder) GetFacilitySlotsByID(arg0, arg1, arg2 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "GetFacilitySlotsByID", arg0, arg1, arg2)
}

func (_m *MockAthFacilityService) GetSportCategoryByID(_param0 context.Context, _param1 *gorm.DB, _param2 v1.GetSportCategoryByIDReq) models.Response {
	ret := _m.ctrl.Call(_m, "GetSportCategoryByID", _param0, _param1, _param2)
	ret0, _ := ret[0].(models.Response)
	return ret0
}

func (_mr *_MockAthFacilityServiceRecorder) GetSportCategoryByID(arg0, arg1, arg2 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "GetSportCategoryByID", arg0, arg1, arg2)
}
